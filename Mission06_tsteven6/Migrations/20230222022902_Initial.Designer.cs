// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mission06_tsteven6.Models;

namespace Mission06_tsteven6.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20230222022902_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("Mission06_tsteven6.Models.ApplicationResponse", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lent")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("ApplicationId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Responses");

                    b.HasData(
                        new
                        {
                            ApplicationId = 1,
                            CategoryId = 5,
                            Director = "Frank Darabont",
                            Edited = true,
                            Lent = "Steve",
                            Notes = "Steve loves this movie man",
                            Rating = "R",
                            Title = "Shawshank Redemption",
                            Year = 1994
                        },
                        new
                        {
                            ApplicationId = 2,
                            CategoryId = 5,
                            Director = "Damien Chazelle",
                            Edited = true,
                            Lent = "Steve",
                            Notes = "Steve loves this movie as well man",
                            Rating = "R",
                            Title = "Whiplash",
                            Year = 2014
                        },
                        new
                        {
                            ApplicationId = 3,
                            CategoryId = 13,
                            Director = "Frank Darabont",
                            Edited = true,
                            Lent = "Steve",
                            Notes = "Steve loves this movie a lot man",
                            Rating = "PG-13",
                            Title = "Creed",
                            Year = 2015
                        });
                });

            modelBuilder.Entity("Mission06_tsteven6.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categoryname")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Categoryname = "Action"
                        },
                        new
                        {
                            CategoryId = 2,
                            Categoryname = "Animation"
                        },
                        new
                        {
                            CategoryId = 3,
                            Categoryname = "Comedy"
                        },
                        new
                        {
                            CategoryId = 4,
                            Categoryname = "Crime"
                        },
                        new
                        {
                            CategoryId = 5,
                            Categoryname = "Drama"
                        },
                        new
                        {
                            CategoryId = 6,
                            Categoryname = "Fantasy"
                        },
                        new
                        {
                            CategoryId = 7,
                            Categoryname = "Historical"
                        },
                        new
                        {
                            CategoryId = 8,
                            Categoryname = "Horror"
                        },
                        new
                        {
                            CategoryId = 9,
                            Categoryname = "Romance"
                        },
                        new
                        {
                            CategoryId = 10,
                            Categoryname = "Science Fiction"
                        },
                        new
                        {
                            CategoryId = 11,
                            Categoryname = "Thriller"
                        },
                        new
                        {
                            CategoryId = 12,
                            Categoryname = "Western"
                        },
                        new
                        {
                            CategoryId = 13,
                            Categoryname = "Sports"
                        },
                        new
                        {
                            CategoryId = 14,
                            Categoryname = "Other"
                        });
                });

            modelBuilder.Entity("Mission06_tsteven6.Models.ApplicationResponse", b =>
                {
                    b.HasOne("Mission06_tsteven6.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
